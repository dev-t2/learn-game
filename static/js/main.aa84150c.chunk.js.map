{"version":3,"sources":["api/keyboard.ts","App.tsx","index.tsx"],"names":["keyboard","callback","window","addEventListener","key","App","useState","setKey","onKeyboard","useCallback","prev","console","log","useEffect","memo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAYeA,EAVE,SAACC,GAChBC,OAAOC,iBAAiB,WAAW,YAAc,IAAXC,EAAU,EAAVA,IACpCH,EAAS,eAAGG,GAAM,OAGpBF,OAAOC,iBAAiB,SAAS,YAAc,IAAXC,EAAU,EAAVA,IAClCH,EAAS,eAAGG,GAAM,Q,OCJhBC,EAAM,WACV,MAAsBC,mBAAS,IAA/B,mBAAOF,EAAP,KAAYG,EAAZ,KAEMC,EAAaC,uBAAY,SAACL,GAC9BG,GAAO,SAACG,GAAD,mBAAC,eAAeA,GAASN,QAC/B,IAQH,OANAO,QAAQC,IAAIR,GAEZS,qBAAU,WACRb,EAASQ,KACR,CAACA,IAEG,6CAGMM,iBAAKT,GChBpBU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.aa84150c.chunk.js","sourcesContent":["type Callback = (key: {}) => void;\r\n\r\nconst keyboard = (callback: Callback) => {\r\n  window.addEventListener('keydown', ({ key }) => {\r\n    callback({ [key]: true });\r\n  });\r\n\r\n  window.addEventListener('keyup', ({ key }) => {\r\n    callback({ [key]: false });\r\n  });\r\n};\r\n\r\nexport default keyboard;\r\n","import { memo, useCallback, useEffect, useState } from 'react';\n\nimport { keyboard } from './api';\n\nconst App = () => {\n  const [key, setKey] = useState({});\n\n  const onKeyboard = useCallback((key: {}) => {\n    setKey((prev) => ({ ...prev, ...key }));\n  }, []);\n\n  console.log(key);\n\n  useEffect(() => {\n    keyboard(onKeyboard);\n  }, [onKeyboard]);\n\n  return <div>React App</div>;\n};\n\nexport default memo(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}