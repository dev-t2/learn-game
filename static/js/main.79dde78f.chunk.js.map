{"version":3,"sources":["api/keyboard.ts","App.tsx","index.tsx"],"names":["initialKeyboard","ArrowLeft","ArrowRight","App","useState","keys","setKeys","onKeyboard","useCallback","keyboardEvent","prev","console","log","useEffect","callback","window","addEventListener","key","Object","includes","memo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAIaA,EAAkB,CAAEC,WAAW,EAAOC,YAAY,G,OCAzDC,EAAM,WACV,MAAwBC,mBAASJ,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAEMC,EAAaC,uBAAY,SAACC,GAC9BH,GAAQ,SAACI,GAAD,mBAAC,eAAeA,GAASD,QAChC,IAQH,OANAE,QAAQC,IAAIP,GAEZQ,qBAAU,WDPY,IAACC,ICQZP,EDPXQ,OAAOC,iBAAiB,WAAW,YAAc,IAAXC,EAAU,EAAVA,IAChCC,OAAOb,KAAKL,GAAiBmB,SAASF,IACxCH,EAAS,eAAGG,GAAM,OAItBF,OAAOC,iBAAiB,SAAS,YAAc,IAAXC,EAAU,EAAVA,IAC9BC,OAAOb,KAAKL,GAAiBmB,SAASF,IACxCH,EAAS,eAAGG,GAAM,SCAnB,CAACV,IAEG,6CAGMa,iBAAKjB,GChBpBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.79dde78f.chunk.js","sourcesContent":["export type KeyboardEvent = { [key: string]: boolean };\r\n\r\ntype Callback = (keyboardEvent: KeyboardEvent) => void;\r\n\r\nexport const initialKeyboard = { ArrowLeft: false, ArrowRight: false };\r\n\r\nexport const keyboard = (callback: Callback) => {\r\n  window.addEventListener('keydown', ({ key }) => {\r\n    if (Object.keys(initialKeyboard).includes(key)) {\r\n      callback({ [key]: true });\r\n    }\r\n  });\r\n\r\n  window.addEventListener('keyup', ({ key }) => {\r\n    if (Object.keys(initialKeyboard).includes(key)) {\r\n      callback({ [key]: false });\r\n    }\r\n  });\r\n};\r\n","import { memo, useCallback, useEffect, useState } from 'react';\r\n\r\nimport { initialKeyboard, keyboard, KeyboardEvent } from './api/keyboard';\r\n\r\nconst App = () => {\r\n  const [keys, setKeys] = useState(initialKeyboard);\r\n\r\n  const onKeyboard = useCallback((keyboardEvent: KeyboardEvent) => {\r\n    setKeys((prev) => ({ ...prev, ...keyboardEvent }));\r\n  }, []);\r\n\r\n  console.log(keys);\r\n\r\n  useEffect(() => {\r\n    keyboard(onKeyboard);\r\n  }, [onKeyboard]);\r\n\r\n  return <div>React App</div>;\r\n};\r\n\r\nexport default memo(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}